name: Build

on: [push]

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        compiler: [clang, gcc]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependency
        run: |
          sudo apt-get install -y gperf libssl-dev zlib1g-dev doxygen
      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        if: matrix.compiler == 'clang'
        with:
          version: 3.9
          platform: x64
      - name: Build TDLib
        run: |
          if [ "$MATRIX_COMPILER" == "clang" ]; then
            export CXX=clang++-3.9
            export CC=clang-3.9
          fi
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . --target tdlib_json_cli -- -j2
          mkdir -p ../out
          mv ./bin/tdlib_json_cli ../out/tdlib_json_cli-linux-$MATRIX_COMPILER
          cd ../td
          if [ "$MATRIX_COMPILER" == "clang" ]; then
            echo "start doxygen ..."
            time doxygen
            cd ..
            cd types-generator
            npm i
            cd ..
            node ./types-generator/index.js
            mv types.json out/types.json
          fi
        env:
          MATRIX_COMPILER: ${{ matrix.compiler }}
      - name: Upload binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: out-${{ matrix.compiler }}
          path: out
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: out-clang
      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: out-gcc
      - name: Move binaries
        run: |
          mkdir -p out
          mv out-*/* out/
      - name: Release
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: out/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
